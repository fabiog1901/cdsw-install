# Keep this line to enable the VIM syntax highlighting
include "SECRET"

name: nifi-1
environmentName: envinifi-1
deploymentName: cminifi-1

provider {
    type: azure
    region: "eastus"
    azureCloudEnvironment: "azure"
    subscriptionId: "xxxxx"
    tenantId: "xxxxx"
    clientId: "xxxxx"
    clientSecret: ${CLIENTSECRET}
}

ssh {
    username: "centos"
    privateKey: "azure/azurekey"
}


instances {
    base {
        type: STANDARD_DS15_V2
        image: cloudera-centos-75-latest
        computeResourceGroup: "fabiodir-rg"
        networkSecurityGroupResourceGroup: "fabiodir-rg"
        networkSecurityGroup: "fabiodir-dir-sg"
        virtualNetworkResourceGroup: "fabiodir-rg"
        virtualNetwork: "directorvnet"
        subnetName: "default"
        publicIP: Yes
        hostFqdnSuffix: "fabiodir"
        availabilitySet: "asmaster"
        storageAccountType: Premium_LRS
        instanceNamePrefix: master-${name}
        managedDisks: Yes
        dataDiskCount: 1
        dataDiskSize: 512
        bootstrapScripts: [ ${bootstrap-script.install-openjdk8}]
        bootstrapScriptsPaths: [
               "scripts/azure-os-generic.sh",
               "scripts/create-log-dir.sh",
               "scripts/clean-yum-cache.sh"
        ]
    }
}

#
# Cloudera Manager
#
cloudera-manager {

    instance: ${instances.base} {
        tags {
            application: "Cloudera Manager 6.1.0"
        }
    }

    repository: "https://archive.cloudera.com/cm6/6.1.0/redhat7/yum/"
    repositoryKeyUrl: "https://archive.cloudera.com/cm6/6.1.0/redhat7/yum/RPM-GPG-KEY-cloudera"


    configs {
        CLOUDERA_MANAGER {
            enable_api_debug: true
            custom_banner_html: "Managed by Cloudera Altus Director"
        }
        SERVICEMONITOR {
            mgmt_log_dir:/data0/log/cloudera-scm-firehose
            firehose_storage_dir:/data0/lib/cloudera-service-monitor
        }
        ACTIVITYMONITOR {
            mgmt_log_dir:/data0/log/cloudera-scm-firehose
        }
        HOSTMONITOR {
            mgmt_log_dir: /data0/log/cloudera-scm-firehose
            firehose_storage_dir: /data0/lib/cloudera-host-monitor
        }
        REPORTSMANAGER {
            headlamp_scratch_dir: /data0/lib/cloudera-scm-headlamp
            mgmt_log_dir: /data0/log/cloudera-scm-headlamp
        }
        EVENTSERVER {
            mgmt_log_dir:/data0/log/cloudera-scm-eventserver
            eventserver_index_dir:/data0/lib/cloudera-scm-eventserver
        }
        ALERTPUBLISHER {
            mgmt_log_dir:/data0/log/cloudera-scm-alertpublisher
        }
    }

    enableEnterpriseTrial: true
    javaInstallationStrategy: NONE
}

#
# Cluster description
#
cluster {
    products {
      CDH: 6.1
    }

    parcelRepositories: [ "https://archive.cloudera.com/cdh6/6.1/parcels/"]

    services: [HDFS, YARN, ZOOKEEPER, OOZIE, HIVE, KAFKA, KUDU, IMPALA, HUE]

    configs {
        HDFS {
            "dfs.replication" : 1
        }
        KAFKA {
            "offsets.topic.replication.factor": 1
            "default.replication.factor" : 1
        }
    }

    masters {
        count: 1
        instance: ${instances.base} {
            tags: {
                application: "CDH 6.1"
                group: masters
            }
        }

        roles {
            HDFS: [NAMENODE, SECONDARYNAMENODE, DATANODE]
            YARN: [RESOURCEMANAGER, JOBHISTORY, NODEMANAGER]
            KAFKA: [KAFKA_BROKER]
            KUDU: [KUDU_MASTER, KUDU_TSERVER]
            IMPALA: [CATALOGSERVER, STATESTORE, IMPALAD]
            HUE: [HUE_SERVER]
            HIVE: [HIVESERVER2, HIVEMETASTORE, GATEWAY]
            OOZIE: [OOZIE_SERVER]
            ZOOKEEPER: [SERVER]
         }
         configs {
            HDFS {
                NAMENODE {
                    namenode_log_dir: /data0/log/hadoop-hdfs
                    dfs_name_dir_list: /data0/dfs/nn
                }
                SECONDARYNAMENODE {
                    secondarynamenode_log_dir: /data0/log/hadoop-hdfs
                    fs_checkpoint_dir_list: /data0/dfs/snn
                }
                DATANODE {
                    datanode_log_dir: /data0/log/hadoop-hdfs
                    dfs_data_dir_list: "/data0/dfs/dn,/data3/dfs/dn"
                    dfs_datanode_failed_volumes_tolerated: 1
                }
            }
            YARN {
              RESOURCEMANAGER {
                resource_manager_log_dir: /data0/log/hadoop-yarn
              }
              JOBHISTORY {
                  mr2_jobhistory_log_dir: /data0/log/hadoop-mapreduce
              }
              NODEMANAGER {
                  node_manager_log_dir: /data0/log/hadoop-yarn
                  yarn_nodemanager_log_dirs: "/data0/log/hadoop-yarn/container,/data3/log/hadoop-yarn/container"
                  yarn_nodemanager_local_dirs: "/data0/yarn,/data3/yarn"
                }
            }
            KUDU {
                    KUDU_MASTER {
                      fs_wal_dir: "/data0/kudu/masterwal"
                      fs_data_dirs: "/data0/kudu/master"
                      default_num_replicas: 1
                    }
                    KUDU_TSERVER {
                      fs_wal_dir: "/data0/kudu/tabletwal"
                      fs_data_dirs: "/data0/kudu/tablet"
                    }
            }
            KAFKA {
                KAFKA_BROKER {
                    broker_max_heap_size : 512
                }
            }
            ZOOKEEPER {
                    SERVER {
                        zk_server_log_dir: /data0/log/zookeeper
                        dataDir: /data0/zookeeper
                        dataLogDir: /data0/zookeeper
                        maxClientCnxns: 1024
                    }
            }
        }
    }

    administrationSettings {
        autoRepairEnabled: true
        autoRepairCooldownPeriodInSeconds: 300
    }
}


#
# Bootstrap scripts
#

bootstrap-script {
install-openjdk8:
"""#!/bin/sh
yum install -y java-1.8.0-openjdk-devel
"""
}
